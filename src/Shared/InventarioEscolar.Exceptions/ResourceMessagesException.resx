<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MAXIMUM_DESCRIPTION_NUMBER" xml:space="preserve">
    <value>Invalid description. The description can have a maximum of 200 characters.</value>
  </data>
  <data name="INVALID_NUMBER_NAME" xml:space="preserve">
    <value>Invalid name. The name must be between 3 and 100 characters.</value>
  </data>
  <data name="NAME_EMPTY" xml:space="preserve">
    <value>The name cannot be empty.</value>
  </data>
  <data name="UNKNOWN_ERROR" xml:space="preserve">
    <value>Unknown error.</value>
  </data>
  <data name="ASSET_CODE_MUST_BE_POSITIVE" xml:space="preserve">
    <value>Error, the asset code must be a positive number.</value>
  </data>
  <data name="NEGATIVE_NUMBER" xml:space="preserve">
    <value>The field value must be a positive number
ve number</value>
  </data>
  <data name="CONSERVATION_STATE_NOT_SUPPORTED;" xml:space="preserve">
    <value>The conservation status of the asset is not recognized</value>
  </data>
  <data name="MAXIMUM_SERIE_NUMBER" xml:space="preserve">
    <value>Invalid serie number. The serie number can have a maximum of 30 characters.</value>
  </data>
  <data name="INVALID_CATEGORY" xml:space="preserve">
    <value>The category is mandatory and must be valid.</value>
  </data>
  <data name="INVALID_ROOM_LOCALIZATION" xml:space="preserve">
    <value>The location room must be valid.</value>
  </data>
  <data name="ASSET_NOT_FOUND" xml:space="preserve">
    <value>Asset not found</value>
  </data>
  <data name="PATRIMONY_CODE_ALREADY_EXISTS " xml:space="preserve">
    <value>Patrimony code already exists</value>
  </data>
  <data name="ROOMLOCATION_NAME_ALREADY_EXISTS" xml:space="preserve">
    <value>Room location name already exists</value>
  </data>
  <data name="ROOMLOCATION_NAME_TOOSHORT" xml:space="preserve">
    <value>The room location name must be at least 2 characters long.</value>
  </data>
  <data name="ROOMLOCATION_NAME_TOOLONG" xml:space="preserve">
    <value>The room location name must not exceed 100 characters.</value>
  </data>
  <data name="ROOMLOCATION_DESCRIPTION_TOOLONG" xml:space="preserve">
    <value>The room location description must not exceed 200 characters.</value>
  </data>
  <data name="ROOMLOCATION_BUILDING_TOOLONG" xml:space="preserve">
    <value>The room location building must not exceed 50 characters.</value>
  </data>
  <data name="SCHOOL_NAME_ALREADY_EXISTS" xml:space="preserve">
    <value>School name already exists</value>
  </data>
  <data name="SCHOOL_NAME_TOOLONG" xml:space="preserve">
    <value>The school name must not exceed 100 characters.</value>
  </data>
  <data name="SCHOOL_NAME_TOOSHORT" xml:space="preserve">
    <value>The school name must be at least 2 characters long.</value>
  </data>
  <data name="SCHOOL_INEP_TOOLONG" xml:space="preserve">
    <value>The school INEP must not exceed 20 characters.</value>
  </data>
  <data name="SCHOOL_ADDRESS_TOOLONG" xml:space="preserve">
    <value>The school address must not exceed 100 characters.</value>
  </data>
  <data name="SCHOOL_CITY_TOOLONG" xml:space="preserve">
    <value>The school city must not exceed 30 characters.</value>
  </data>
  <data name="SCHOOL_INEP_ALREADY_EXISTS" xml:space="preserve">
    <value>School INEP already exists</value>
  </data>
  <data name="SCHOOL_ADDRESS_ALREADY_EXISTS" xml:space="preserve">
    <value>School address already exists</value>
  </data>
  <data name="CATEGORY_NAME_TOOLONG" xml:space="preserve">
    <value>The category name must not exceed 100 characters.</value>
  </data>
  <data name="CATEGORY_NAME_TOOSHORT" xml:space="preserve">
    <value>The category name must be at least 2 characters long.</value>
  </data>
  <data name="CATEGORY_DESCRIPTION_TOOLONG" xml:space="preserve">
    <value>The category description must not exceed 200 characters.</value>
  </data>
  <data name="CATEGORY_NAME_ALREADY_EXISTS" xml:space="preserve">
    <value>Category name already exists</value>
  </data>
  <data name="SCHOOL_NOT_FOUND" xml:space="preserve">
    <value>School not found</value>
  </data>
  <data name="ROOMLOCATION_NOT_FOUND" xml:space="preserve">
    <value>Room location not found.</value>
  </data>
  <data name="CATEGORY_NOT_FOUND" xml:space="preserve">
    <value>Category not found</value>
  </data>
  <data name="SCHOOL_ID_INVALID" xml:space="preserve">
    <value>School id invalid</value>
  </data>
  <data name="ROOMLOCATION_ID_INVALID" xml:space="preserve">
    <value>Room location id invalid</value>
  </data>
  <data name="CATEGORY_ID_INVALID" xml:space="preserve">
    <value>Category id invalid</value>
  </data>
  <data name="ASSET_ID_INVALID" xml:space="preserve">
    <value>Asset id invalid</value>
  </data>
  <data name="ASSETMOVEMENT_ASSET_ID_INVALID" xml:space="preserve">
    <value>Asset ID must be greater than 0.</value>
  </data>
  <data name="ASSETMOVEMENT_FROM_ROOM_ID_INVALID" xml:space="preserve">
    <value>From Room ID must be greater than 0.</value>
  </data>
  <data name="ASSETMOVEMENT_TO_ROOM_ID_INVALID" xml:space="preserve">
    <value>To Room ID must be greater than 0.</value>
  </data>
  <data name="ASSETMOVEMENT_MOVED_AT_INVALID" xml:space="preserve">
    <value>Moved At date cannot be in the future.</value>
  </data>
  <data name="ASSETMOVEMENT_RESPONSIBLE_NAME_TOO_LONG" xml:space="preserve">
    <value>Asset movement responsible name cannot exceed 100 characters.</value>
  </data>
  <data name="ASSETMOVEMENT_NOT_FOUND" xml:space="preserve">
    <value>Asset movement not found.</value>
  </data>
  <data name="ROOMLOCATION_NOT_FOUND_ORIGIN" xml:space="preserve">
    <value>Room location origin not found.</value>
  </data>
  <data name="ROOMLOCATION_NOT_FOUND_DESTINATION" xml:space="preserve">
    <value>Room location destination not found.</value>
  </data>
  <data name="ASSETMOVEMENT_SAME_ROOM" xml:space="preserve">
    <value>Asset movement same room.</value>
  </data>
  <data name="ASSETMOVEMENT_CANCELREASON_TOO_LONG" xml:space="preserve">
    <value>Asset movement cancel reason cannot exceed 200 characters.</value>
  </data>
  <data name="ROOMLOCATION_HAS_ASSETS" xml:space="preserve">
    <value>Cannot delete room location because it still has assets assigned.</value>
  </data>
  <data name="CATEGORY_HAS_ASSETS" xml:space="preserve">
    <value>Cannot delete category because it still has assets assigned.</value>
  </data>
  <data name="SCHOOL_HAS_DEPENDENCIES" xml:space="preserve">
    <value>Cannot delete the school because it still has associated rooms, assets, or categories.</value>
  </data>
  <data name="ASSET_NOT_BELONG_TO_SCHOOL" xml:space="preserve">
    <value>The asset does not belong to the user's school.</value>
  </data>
  <data name="CATEGORY_NOT_BELONG_TO_SCHOOL" xml:space="preserve">
    <value>The category does not belong to the user's school.</value>
  </data>
  <data name="ROOMLOCATION_NOT_BELONG_TO_SCHOOL" xml:space="preserve">
    <value>The room location does not belong to the user's school.</value>
  </data>
  <data name="USER_NOT_AUTHENTICATED" xml:space="preserve">
    <value>User not Authenticated</value>
  </data>
</root>